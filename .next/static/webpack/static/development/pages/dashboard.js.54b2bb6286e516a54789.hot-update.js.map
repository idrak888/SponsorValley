{"version":3,"file":"static/webpack/static\\development\\pages\\dashboard.js.54b2bb6286e516a54789.hot-update.js","sources":["webpack:///./components/SponsorDash.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport SponsorModule from './SponsorModule';\r\nimport * as firebase from 'firebase';\r\nimport axios from 'axios';\r\n// import AddNew from './AddNew';\r\n\r\nclass SponsorDash extends Component {\r\n    state = {\r\n        logoUrl: '',\r\n        sponsors: [],\r\n        partners: [\r\n            {name: 'TierZoo', status: 'Unfinished'},\r\n            {name: 'Samonella Academy', status: 'Completed'},\r\n            {name: 'Playbox8G', status: 'Cancelled'}\r\n        ],\r\n        notifications: [ \r\n            'New request from Playbox8G',\r\n            'TierZoo: \"Please send me your website link...\"',\r\n            'New request from The Inforgraphics Show',\r\n            'Sponsorship with TierZoo was confirmed',\r\n            'Payment was completed successfully'\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; \r\n        console.log(this.props.id);\r\n        axios.get(\"https://desolate-cove-35133.herokuapp.com/sponsors/\" + localStorage.getItem('userId'))\r\n        .then((doc) => {\r\n            this.setState({sponsors:doc.data});\r\n        });\r\n        setTimeout(() => {\r\n            var storageRef = firebase.storage().ref(this.props.companyName + '/' + 'image');\r\n            storageRef.getDownloadURL().then((url) => {\r\n                this.setState({logoUrl:url});\r\n            }).catch((error) => {\r\n                \r\n            });\r\n        }, 10);\r\n    }\r\n    showPopup = () => {\r\n        document.querySelector('.select-logo').style.display = 'block';\r\n    }\r\n    closePopup = () => {\r\n        document.querySelector('.select-logo').style.display = 'none';\r\n    }\r\n    uploadLogo = e => {\r\n        e.preventDefault();\r\n        const uploadBtn = document.querySelector('.upload-btn');\r\n        const loader = document.querySelector('.loader');\r\n\r\n            const firestoreRef = firebase.firestore().collection('uploads').doc(this.props.companyName + '-logo'); \r\n            uploadBtn.disabled = true;\r\n            loader.style.display = 'inline-block';\r\n\r\n            firestoreRef.get().then((doc) => {\r\n                let currentImages = doc.data();\r\n                const file = document.querySelector('#file');\r\n                var uploadFile = file.files[0];\r\n\r\n                var storageRef = firebase.storage().ref(this.props.companyName + '/' + 'image');\r\n                storageRef.put(uploadFile);\r\n                \r\n                setTimeout(() => {\r\n                    document.querySelector('.msg').innerHTML = 'Uploaded!';\r\n                    loader.style.display = 'none';\r\n                    uploadBtn.disabled = false;\r\n\r\n                    window.location.reload();\r\n                }, 600);\r\n            });\r\n    }\r\n    showAddNew = () => {\r\n        // document.querySelector('.AddNew').style.display = 'block';\r\n    }\r\n    renderSponsors = () => {\r\n        if (this.state.sponsors.length == 0) {\r\n            return <p className=\"text-secondary no-sponsors\">No sponsorships yet. Start by adding</p>;\r\n        }\r\n    }\r\n    showLogo = () => {\r\n        if (this.state.logoUrl == '') {\r\n            return (\r\n                    <div className=\"enter-logo\" onClick={this.showPopup}>\r\n                        <span>Display your logo here!</span>\r\n                    </div>\r\n                    );\r\n        }else {\r\n            return <img src={this.state.logoUrl} onClick={this.showPopup} className=\"companyLogo img-fluid\" width=\"100\" />         \r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"SponsorDash\">\r\n\r\n                <div className=\"select-logo\">\r\n                    <img className=\"cross\" onClick={this.closePopup} src=\"/static/widgets/cross.png\" />\r\n                    <h3>Upload new logo</h3>\r\n                    <br/>\r\n                    <input id=\"file\" type=\"file\"/>\r\n                    <br/>\r\n                    <img className=\"loader\" width=\"40\" src=\"https://www.unlimitedvacationclub.com/assets/images/loading.gif\" />\r\n                    <br/>\r\n                    <button className=\"btn btn-success upload-btn\" onClick={this.uploadLogo}>Upload</button>\r\n                    <p className=\"msg text-secondary\"></p>\r\n                </div>\r\n                <div className=\"Top\">\r\n                    <h2>Dashboard</h2>\r\n                </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"box box3\">\r\n                                <h3>Open Sponsorships</h3>\r\n                                <strong>Quick find</strong>\r\n                                <br/>\r\n                                <input type=\"search\" placeholder=\"Search\"/>\r\n                                <br/>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <div className=\"box box1\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        {this.showLogo()}\r\n                                        <br/>\r\n                                        <h3>{this.props.companyName}</h3>\r\n                                        {this.props.companyType}\r\n                                        <br/>\r\n                                        Email: {this.props.email}\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <br/>\r\n                                        <strong className=\"text-primary\">Notifications</strong>\r\n                                        <div className=\"notifications\">\r\n                                            {this.state.notifications.map(n => {\r\n                                                return (\r\n                                                    <div className=\"notification\">\r\n                                                        <span className=\"text-secondary\">{n}</span>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                <br/>\r\n                <h4>Your partnerships</h4>\r\n                <br/>\r\n                <div className=\"slide-container\">\r\n                    {this.state.partners.map(p => {\r\n                        return (\r\n                            <div className=\"box box2\">\r\n                                <h5 className=\"text-primary\">{p.name}</h5>\r\n                                <br/>\r\n                                Status: <p className=\"text-secondary\">{p.status}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>     \r\n                <div className=\"sponsor-module-container\">\r\n                    <h4>Open sponsorships by {this.props.companyName}</h4>\r\n                    <table align=\"center\">\r\n                        <tr>\r\n                            <td>\r\n                                <button className=\"btn btn-success\">Edit</button>\r\n                            </td>\r\n                            <td>\r\n                                <a href=\"/dashboard/addnew\"><button className=\"btn btn-success\">Add new +</button></a>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <br/>\r\n                    {this.renderSponsors()}\r\n                    {this.state.sponsors.map(i => {\r\n                        return <SponsorModule companyName={i.by} min={i.priceRange.minprice} max={i.priceRange.maxprice} description={i.description} date={i.dateCreated}/>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SponsorDash;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AARA;AACA;AAgCA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AApEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;;;AAohLA;AACA;AAkLA;;;;A","sourceRoot":""}